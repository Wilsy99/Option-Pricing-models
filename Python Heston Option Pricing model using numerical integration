"""
Created on Sun Nov 22 14:38:09 2020

@author: Adam Wilson
"""

from scipy.integrate import quad 
from numpy import array
from mpmath import sqrt,exp,log,pi,re,inf

def HestonCall(s,k,t,r,q,sigma,kappa,v0,rho,theta):
   b=array([kappa-rho*sigma,kappa])
   i=1j
   d1=lambda om: sqrt(((b[0]-rho*sigma*i*om)**2)-((sigma**2)*(2*0.5*i*om-om**2)))
   d2=lambda om: sqrt(((b[1]-rho*sigma*i*om)**2)-((sigma**2)*(2*-0.5*i*om-om**2)))
   g1=lambda om: (b[0]-rho*sigma*i*om+d1(om))/(b[0]-rho*sigma*i*om-d1(om))
   g2=lambda om: (b[1]-rho*sigma*i*om+d2(om))/(b[1]-rho*sigma*i*om-d2(om))
   D1=lambda om: ((b[0]-rho*sigma*i*om+d1(om))/(sigma**2))*((1-exp(d1(om)*t))/(1-g1(om)*exp(d1(om)*t)))
   D2=lambda om: ((b[1]-rho*sigma*i*om+d2(om))/(sigma**2))*((1-exp(d2(om)*t))/(1-g2(om)*exp(d2(om)*t)))
   C1=lambda om: (r-q)*i*om*t+((kappa*theta)/(sigma**2))*((b[0]-rho*sigma*i*om+d1(om))*t-2*log((1-g1(om)*exp(d1(om)*t))/(1-g1(om))))
   C2=lambda om: (r-q)*i*om*t+((kappa*theta)/(sigma**2))*((b[1]-rho*sigma*i*om+d2(om))*t-2*log((1-g2(om)*exp(d2(om)*t))/(1-g2(om))))
   fun1=lambda om: exp(C1(om)+D1(om)*v0+i*om*log(s))
   fun2=lambda om: exp(C2(om)+D2(om)*v0+i*om*log(s))
   e1=lambda om: re((exp(-i*om*log(k))*fun1(om))/(i*om))
   e2=lambda om: re((exp(-i*om*log(k))*fun2(om))/(i*om))
   P1=0.5+(1/pi)*quad(e1,0,inf)[0]
   P2=0.5+(1/pi)*quad(e2,0,inf)[0]
   
   return s*exp(-q*t)*P1-k*exp(-r*t)*P2
